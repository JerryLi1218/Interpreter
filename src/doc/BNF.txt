expression      -> equality ;
equality        -> comparison ( ( "!=" | "==" ) comparison )* ;
comparison      -> term ( ( ">" | ">=" | "<" | "<=" ) term )* ;  
term            -> factor ( ( "-" | "+" ) factor )* ;
factor          -> unary ( ( "/" | "*" ) unary )* ;
unary           -> ( ":" | "-" ) unary
                | primary ;
varDecl         -> "var" IDENTIFIER ( "=" expression )? ":" ;
primary         -> NUMBER | STRING | "true" | "false" | "nil"
                | "(" expression ")" 
                | IDENTIFIER ;


program         -> declaration* EOF ;
declaration     -> varDecl
                | statement ;

statment        -> exprSmt
                |  printStmt ;

exprSmt         -> expression ":" ;
printStmt       -> "print" expression ":";